@using System.IdentityModel.Protocols.WSTrust
@model PhotoContest.Web.Models.ContestModels.InputModels.ContestInputModel

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>CreateContestViewModel</h4>
        <hr/>
        @Html.ValidationSummary(true, "", new {@class = "text-danger"})
        <div class="form-group">
            @Html.LabelFor(model => model.Title, new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.EditorFor(model => model.Title, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.Title, "", new {@class = "text-danger"})
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Description, new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.EditorFor(model => model.Description, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.Description, "", new {@class = "text-danger"})
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.WinnersCount, new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.EditorFor(model => model.WinnersCount, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.WinnersCount, "", new {@class = "text-danger"})
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DeadlineDate, new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.EditorFor(model => model.DeadlineDate, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.DeadlineDate, "", new {@class = "text-danger"})
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.MaxNumberOfParticipants, new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.EditorFor(model => model.MaxNumberOfParticipants, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.MaxNumberOfParticipants, "", new {@class = "text-danger"})
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ParticipationStrategyType, new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.EnumDropDownListFor(model => model.ParticipationStrategyType, new {id = "participation-strategy"})
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.VotingStrategyType, new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.EnumDropDownListFor(model => model.VotingStrategyType)
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10" id="users-for-add">
                <input type="submit" value="Create" class="btn btn-default"/>
            </div>
        </div>
    </div>

    
   
}

@using (Ajax.BeginForm("SearchUsers", "Home", null, new AjaxOptions()
{
    HttpMethod = "POST",
    UpdateTargetId = "searched-users",
    // TODO make function on succsess if needed

}, new { id = "users-search-form" }))
{
    <input id="user-search-input" style="visibility: hidden" name="path" type="text" placeholder="Search for users" />
}

<div id="searched-users">
    <p>searched</p>
</div>


<div id="added-users" style="visibility: hidden">
    <p>Added users</p>
</div>


<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/jquery")
    <script>
        $('#user-search-input').keyup(function () {
            if ($('#user-search-input').val().length > 0) {
                $('#users-search-form').submit();
            }

            if ($('#user-search-input').val().length === 0) {
                $('#searched-users').html("");
            }
        });

        $('#participation-strategy').change(function () {
            var value = $('#participation-strategy :selected').text();
            if (value === 'Closed') {
                $('#user-search-input').css("visibility", "visible");
            } else {
                $('#user-search-input').css("visibility", "hidden");
            }
        });
        
    </script>
}