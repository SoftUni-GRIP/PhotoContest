@using System.IdentityModel.Tokens
@using System.Security.AccessControl
@model PhotoContest.Web.Models.ContestModels.InputModels.ContestInputModel

@{
    ViewBag.Title = "Create Contest";
}

<h2>@ViewBag.Title</h2>

<div id="prizes-modal" class="modal fade in">
    <div class="modal-dialog">
        <div class="modal-content">
            <div id="prizes-modal-content">
                <div class="modal-header">
                    <h4 class="modal-title">Add Prize</h4>
                    <div class="input-group">
                        <span class="input-group-addon">$</span>
                        <input id="price" type="number" value="" class="form-control" aria-label="Amount (to the nearest dollar)">
                        <input type="submit" value="Add" id="add-price" class="btn btn-default">
                    </div>
                </div>
                <script>
                    $('#add-price').click(function () {
                        var price = $('#price').val();
                        $('<input>').attr({
                            type: 'hidden',
                            name: "Prizes",
                            value: price,
                            id: 'price-input-binder' + price
                        }).appendTo('#input-binder-create');

                        var prizesDiv = $('<div>');
                        prizesDiv.append('<p>' + price + '</p>');
                        var delBtn = $('<button>');
                        delBtn.text('remove');
                        delBtn.click(function () {
                            $(this).parent().remove();
                            $('#price-input-binder' + price).remove();
                        });

                        prizesDiv.append(delBtn);

                        $('#prizes').append(prizesDiv);

                        closeModalFrom('prizes-modal');
                    })

                </script>
            </div>
        </div>
    </div>
</div>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Title, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Description, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.WinnersCount, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.WinnersCount, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.WinnersCount, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DeadlineDate, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.DeadlineDate, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.DeadlineDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.MaxNumberOfParticipants, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.MaxNumberOfParticipants, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.MaxNumberOfParticipants, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ParticipationStrategyType, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EnumDropDownListFor(model => model.ParticipationStrategyType, new { id = "participation-strategy" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.VotingStrategyType, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EnumDropDownListFor(model => model.VotingStrategyType)
            </div>
        </div>

        @Html.ValidationMessageFor(model => model.Prizes, "", new { @class = "text-danger" })

        @Html.ActionLink("Add Prize", "CreatePrize", "Contest", new { @class = "btn btn-default", data_modal = "createPrize" })

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10" id="input-binder-create">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

@using (Ajax.BeginForm("SearchUsers", "Home", null, new AjaxOptions()
{
    HttpMethod = "POST",
    UpdateTargetId = "searched-users",
    // TODO make function on succsess if needed

}, new { id = "users-search-form" }))
{
    <input id="user-search-input" style="visibility: hidden" name="path" type="text" placeholder="Search for users" />
}

<div id="searched-users">
    <p>searched</p>
</div>

@using (Ajax.BeginForm("SearchUsersVote", "Home", null, new AjaxOptions()
{
    HttpMethod = "POST",
    UpdateTargetId = "searched-users-vote",
    // TODO make function on succsess if needde

}, new { id = "users-search-vote-form" }))
{
    <input id="user-search-vote-input" style="visibility: hidden" name="input" type="text" placeholder="Search for users" />
}

<div id="searched-users-vote">
    <p>searched</p>
</div>


<div id="prizes">
    <p>prizes</p>
</div>

<div id="added-users" style="visibility: hidden">
    <p>Added users</p>
</div>

<div id="added-users-vote" style="visibility: hidden">
    <p>Added users voting</p>
</div>


<div>
    @Html.ActionLink("Back to List", "Index", "Home")
</div>

@section Styles{
    @Styles.Render("~/Content/bootstrap-datetimepicker");
}
@section Scripts{
    @Scripts.Render("~/bundles/modals")
    @Scripts.Render("~/bundles/bootstrap-datetimepicker")


    <script>
        invokeModalForm('prizes-modal-content', 'prizes-modal', "createPrize");
        datetimePickerInvoker('DeadlineDate');

        $('#user-search-input').keyup(function () {
            if ($('#user-search-input').val().length > 0) {
                $('#users-search-form').submit();
            }

            if ($('#user-search-input').val().length === 0) {
                $('#searched-users').html("");
            }
        });

        $('#user-search-vote-input').keyup(function () {
            if ($('#user-search-vote-input').val().length > 0) {
                $('#users-search-vote-form').submit();
            }

            if ($('#user-search-vote-input').val().length === 0) {
                $('#searched-users-vote').html("");
            }
        });

        $('#participation-strategy').change(function () {
            var value = $('#participation-strategy :selected').text();
            if (value === 'Closed') {
                $('#user-search-input').css("visibility", "visible");
            } else {
                $('#user-search-input').css("visibility", "hidden");
            }
        });

        $('#VotingStrategyType').change(function () {
            var value = $('#VotingStrategyType :selected').text();
            if (value === 'Closed') {
                $('#user-search-vote-input').css("visibility", "visible");
            } else {
                $('#user-search-vote-input').css("visibility", "hidden");
            }
        });

    </script>
}