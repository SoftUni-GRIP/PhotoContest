@using PhotoContest.Common.Enums
@model PhotoContest.Web.Models.ContestModels.ViewModels.ContestFullDetailsModel
@*TODO Fix this view*@
<div id="delete-contest-modal" class="modal fade in">
    <div class="modal-dialog">
        <div class="modal-content">
            <div id="delete-contest-modal-content">
            </div>
        </div>
    </div>
</div>

<div id="dismiss-contest-modal" class="modal fade in">
    <div class="modal-dialog">
        <div class="modal-content">
            <div id="dismiss-contest-modal-content">
            </div>
        </div>
    </div>
</div>

<div id="edit-contest-modal" class="modal fade in">
    <div class="modal-dialog">
        <div class="modal-content">
            <div id="edit-contest-modal-content">
            </div>
        </div>
    </div>
</div>

    <div id="finalize-contest-modal" class="modal fade in">
        <div class="modal-dialog">
            <div class="modal-content">
                <div id="finalize-contest-modal-content">
                </div>
            </div>
        </div>
    </div>

    <div>
        <h4>Contest @Model.Title Details</h4>
        <hr />
        @Html.LabelFor(m => m.Title)
        @Html.DisplayFor(m => m.Title)
        <br />

        @Html.LabelFor(m => m.Description)
        @Html.DisplayFor(m => m.Description)
        <br />

        @Html.LabelFor(m => m.Owner)
        @Html.DisplayFor(m => m.Owner)
        <br />

        @Html.LabelFor(m => m.DeadlineDate)
        @Html.DisplayFor(m => m.DeadlineDate)
        <br />

        @Html.LabelFor(m => m.MaxNumberOfParticipants)
        @Html.DisplayFor(m => m.MaxNumberOfParticipants)
        <br />

        
        @Html.LabelFor(m => m.Status)
        <span id="contest-status">
            @Html.DisplayFor(m => m.Status)
        </span>
        <br />

        @Html.LabelFor(m => m.VotingStrategyType)
        @Html.DisplayFor(m => m.VotingStrategyType)
        <br />

        @Html.LabelFor(m => m.ParticipationStrategyType)
        @Html.DisplayFor(m => m.ParticipationStrategyType)

        <br/>

        @if (Model.Status == ContestStatusType.Finalized)
        {
            @Html.LabelFor(m => m.Winners)
            @Html.DisplayFor(m => m.Winners)
        }

        @if (Model.Pictures.Any())
        {
            <h3>Pictures</h3>
            
            <div class="row">
                @Html.DisplayFor(m => m.Pictures, new { canVote = Model.CanVote, canEdit = Model.CanEdit})
            </div>
        }


    </div>
    <div class="btn-group-sm" role="group">
        @if (Model.CanEdit)
        {
            @Html.ActionLink("Edit", "Edit", "Contest", new { id = @Model.Id }, new { @class = "btn btn-success", data_modal = "editContest" })

            @Html.ActionLink("Delete", "Delete", "Contest", new { id = @Model.Id }, new { @class = "btn btn-danger", data_modal = "deleteContest" })

            if (Model.Status != ContestStatusType.Dismissed && Model.Status != ContestStatusType.Finalized)
            {
                @Html.ActionLink("Dismiss", "DissmisViewInvoker", "Contest", new { id = @Model.Id }, new { @class = "btn btn-danger", data_modal = "dismissContest", id = "dismiss-bnt" })
            }


            if (Model.Status != ContestStatusType.Dismissed && Model.Status != ContestStatusType.Finalized)
            {
                @Html.ActionLink("Finalize", "FinalizeViewInvoker", "Contest", new { id = @Model.Id }, new { @class = "btn btn-info", data_modal = "finalizeContest", id = "finalize-btn" })
            }
        }

        @if (Model.CanParticipate)
        {
            <div class="configuration k-widget k-header" style="width: 300px">
                <span class="infoHead">Upload pictures</span>
            </div>

            <div style="width: 45%">
                <div class="demo-section">
                    @(Html.Kendo().Upload()
                          .Name("files")
                          .Async(a => a
                              .Save("Save", "Upload", new {contestId = @Model.Id})
                              .AutoUpload(true)
                          ))
                </div>
            </div>
        }

        @Html.ActionLink("Back", "Index", "Home", null, new { @class = "btn btn-default" })
    </div>


    @Scripts.Render("~/bundles/modals")

    <script>
        invokeModalForm('edit-contest-modal-content', 'edit-contest-modal', "editContest");
        invokeModalForm('delete-contest-modal-content', 'delete-contest-modal', "deleteContest");
        invokeModalForm('dismiss-contest-modal-content', 'dismiss-contest-modal', "dismissContest");
        invokeModalForm('finalize-contest-modal-content', 'finalize-contest-modal', "finalizeContest");

        function removeContestFromUI(data) {
            console.log(data);
        }
    </script>

